name: Rust CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build_and_test:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            curl \
            wget \
            file \
            libssl-dev \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            libwebkit2gtk-4.1-dev

      - name: Setup Node.js (24.x)
        uses: actions/setup-node@v4
        with:
          node-version: "24"
          check-latest: true
          cache: "npm"
          cache-dependency-path: "./src/ui/package-lock.json"

      - name: Use npm 11 (align with packageManager)
        shell: bash
        run: |
          if [ "$(npm -v | cut -d. -f1)" != "11" ]; then
            npm i -g npm@11
          fi
          echo "Node: $(node -v)"
          echo "npm : $(npm -v)"

      - name: Enforce npm engine strictness (Node 24)
        run: |
          npm config set engine-strict true
          node -v
          npm -v
        working-directory: ./src/ui

      - name: Install npm dependencies (clean, deterministic)
        run: npm ci
        working-directory: ./src/ui

      # ðŸ”’ Quality gates (fail fast)
      - name: Run ESLint (warnings treated as errors)
        run: npm run lint
        working-directory: ./src/ui

      - name: Run Svelte typecheck (warnings fail build)
        run: npm run typecheck
        working-directory: ./src/ui

      - name: Build JavaScript bundle
        run: npm run build
        working-directory: ./src/ui

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt

      - name: Check formatting
        run: cargo fmt -- --check

      - name: Run Clippy
        run: cargo clippy -- -D warnings

      - name: Run tests with snapshot verification
        env:
          INSTA_UPDATE: "no"
        run: cargo test --workspace
